{
  "info": {
    "_postman_id": "your-postman-id-here",
    "name": "PrintMyStride",
    "description": "A Postman collection to handle Create, Delete, Update, and Search operations for User, SignIn, and Product.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"firstName\": \"Jane\",\n\t\"lastName\": \"Doe\",\n\t\"email\": \"jane.doe@example.com\",\n\t\"password\": \"Passw0rd1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth/signup", ""]
            },
            "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
          },
          "response": []
        },
        {
          "name": "signin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"email\": \"jane.doe@example.com\",\n\t\"password\": \"Passw0rd1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/signin",
              "host": ["{{base_url}}"],
              "path": ["auth/signin", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get my data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth/me", "1"]
            },
            "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Product",
      "item": [
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"title\": \"Sample Product\",\n\t\"image\": \"http://example.com/image.jpg\",\n\t\"description\": \"A detailed description of the product.\",\n\t\"price\": \"99.99\",\n\t\"isPublic\": true,\n\t\"userId\": \"64d5bcb0c1e4b2d49f5f5f88\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/products/",
              "host": ["{{base_url}}"],
              "path": ["products"]
            },
            "description": "This endpoint creates a new product."
          },
          "response": []
        },
        {
          "name": "Update Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"title\": \"Updated Product\",\n\t\"image\": \"http://example.com/image2.jpg\",\n\t\"description\": \"An updated description of the product.\",\n\t\"price\": \"89.99\",\n\t\"isPublic\": false,\n\t\"userId\": \"64d5bcb0c1e4b2d49f5f5f88\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/products/1",
              "host": ["{{base_url}}"],
              "path": ["products", "1"]
            },
            "description": "This endpoint updates an existing product."
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/1",
              "host": ["{{base_url}}"],
              "path": ["products", "1"]
            },
            "description": "This endpoint deletes a product by ID."
          },
          "response": []
        },
        {
          "name": "Get Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/1",
              "host": ["{{base_url}}"],
              "path": ["products", "1"]
            },
            "description": "This endpoint retrieves a product by ID."
          },
          "response": []
        },
        {
          "name": "Search Products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products?search=laptop",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "search",
                  "value": "laptop"
                }
              ]
            },
            "description": "This endpoint searches for products using a query parameter."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Order",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"title\":\"Order for Product 64d5bd12c1e4b2d49f5f5f99\",\"image\":\"http://example.com/product-image.jpg\",\"description\":\"This order includes 2 units of the product with ID 64d5bd12c1e4b2d49f5f5f99. The order was placed on 2024-08-14 and is currently payed.\",\"price\":\"199.98\",\"isPublic\":true,\"userId\":\"64d5bcb0c1e4b2d49f5f5f88\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/orders/",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            },
            "description": "This endpoint creates a new order."
          },
          "response": []
        },
        {
          "name": "Update Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"title\":\"Order for Product 64d5bd12c1e4b2d49f5f5f99\",\"image\":\"http://example.com/product-image.jpg\",\"description\":\"This order includes 2 units of the product with ID 64d5bd12c1e4b2d49f5f5f99. The order was placed on 2024-08-14 and is currently payed.\",\"price\":\"199.98\",\"isPublic\":true,\"userId\":\"64d5bcb0c1e4b2d49f5f5f88\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/orders/1",
              "host": ["{{base_url}}"],
              "path": ["orders", "1"]
            },
            "description": "This endpoint updates an existing order."
          },
          "response": []
        },
        {
          "name": "Delete Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/1",
              "host": ["{{base_url}}"],
              "path": ["orders", "1"]
            },
            "description": "This endpoint deletes a order by ID."
          },
          "response": []
        },
        {
          "name": "Get Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/1",
              "host": ["{{base_url}}"],
              "path": ["orders", "1"]
            },
            "description": "This endpoint retrieves a order by ID."
          },
          "response": []
        },
        {
          "name": "Search Orders",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders?search=laptop",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "search",
                  "value": "laptop"
                }
              ]
            },
            "description": "This endpoint searches for orders using a query parameter."
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080"
    }
  ]
}
